import os
import re

__api=dict()

def run(decodepath):
	__apiextract(decodepath)
	return __api
	pass

def __apiextract(decodepath):
	smalipath=decodepath+'/smali/'
	# bfs
	for path1 in os.listdir(smalipath):
		if path1 != 'android':
			stack = []
			stack.append(smalipath+path1)
			# dfs
			while len(stack)>0:
				tmp = stack.pop()
				for path in os.listdir(tmp):
					nextpath=os.path.join(tmp,path)
					if os.path.isdir(nextpath):
						stack.append(nextpath)
					else:  # all .smali file
						__regular(nextpath)


def __regular(filepath):
	f = open(filepath,'r')
	content =f.read()
	strlist =re.findall('invoke[^\n]*Landroid[^\n]*->[^\n]*',content)
	for item in strlist:
		#  lib
		start=item.find('Landroid')
		end=item.find('->')
		libstr=item[start+1:end-1]
		libstr= libstr.replace('/','.')
		libstr= libstr.replace('$','.')
		# function
		functionstr=re.search('->\w+\(',item[end::])
		if functionstr:
			funname=functionstr.group()[2:-1]+'()'
			if __api.get(libstr) is None:
				__api[libstr]={}
				__api[libstr][funname]=1
			else:
				if __api[libstr].get(funname):
					__api[libstr][funname]+=1
				else:
					__api[libstr][funname]=1
	f.close()
