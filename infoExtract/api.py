import os
import re
import csv

__api = dict()
__sensitive_api_list = dict()


def run(decode_path):
	__api.clear()
	__api_extract(decode_path)
	return __api
	pass


def __api_extract(decode_path):
	smali_path = decode_path + '/smali/'
	# bfs
	for path1 in os.listdir(smali_path):
		if path1 != 'android':
			stack = list()
			full_path = os.path.join(smali_path, path1)
			if os.path.isdir(full_path):
				stack.append(full_path)
			else:
				__regular(full_path)
			# dfs
			while len(stack) > 0:
				tmp = stack.pop()
				for path in os.listdir(tmp):
					next_path = os.path.join(tmp, path)
					if os.path.isdir(next_path):
						stack.append(next_path)
					else:  # all .smali file
						__regular(next_path)


def __regular(file_path):
	f = open(file_path, 'r')
	content = f.read()
	str_list = re.findall('invoke[^\n]*Landroid[^\n]*->[^\n]*', content)
	for item in str_list:
		#  lib
		start = item.find('Landroid')
		end = item.find('->')
		lib_name = item[start + 1:end - 1]
		lib_name = lib_name.replace('/', '.')
		lib_name = lib_name.replace('$', '.')
		# function
		func_str = re.search('->\w+\(', item[end::])
		if func_str:
			func_name = func_str.group()[2:-1] + '()'
			api = lib_name + '->' + func_name
			if __sensitive_api_list.get(api) is None:
				continue
			__api[api] = __sensitive_api_list[api]
	f.close()


def __read_api_from_csv():
	with open('featureList/all_sensitive_api.csv') as f:
		f_csv = csv.reader(f)
		# api编号
		for row in f_csv:
			__sensitive_api_list[row[0]] = {"Description": row[1], "Threat Level": row[2]}


__read_api_from_csv()
