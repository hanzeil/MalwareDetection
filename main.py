import os

from flask import Flask, request, redirect, url_for, render_template

from machineLearning import per_feature, api_feature, decompile, ml, predict

UPLOAD_FOLDER = '/srv/http/uploads/'

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
apks_path = "/srv/http/apks/"


@app.route('/', methods=['GET', 'POST'])
def index():
	global apks_path
	if request.method == 'GET':
		return render_template('index.html', apks_path=apks_path)
	elif request.method == 'POST':
		if request.files.get('file'):
			file = request.files['file']
			filename = file.filename
			if file:
				file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
				return redirect(url_for('uploaded_file', filename=filename))
		elif request.values.get('decompile'):
			decompile.run(apks_path)
			return redirect(url_for('success'))
		elif request.values.get('change_path'):
			apks_path = request.values.get('apks_path')
			return redirect(url_for('success'))
		elif request.values.get('training'):
			if request.values.get('permission_used') == 'on':
				pe = per_feature.PermissionFeatureExtract(apks_path)
				pe.run()
			if request.values.get('sensitive_api_called') == 'on':
				api = api_feature.ApiFeatureExtract(apks_path)
				api.run()
			ml.train()
			return redirect(url_for('success'))
		elif request.values.get('init'):
			cmd = 'rm -R dataset/*'
			os.system(cmd)
			return redirect(url_for('success'))
		return 'Error 400 Bad Request'


@app.route('/success')
def success():
	return render_template('success.html')


@app.route('/report/<filename>')
def uploaded_file(filename):
	all_permission, all_api, result = predict.run(filename, app.config['UPLOAD_FOLDER'])
	return render_template('report.html', all_permission=all_permission, all_api=all_api, result=result)


@app.route('/init/')
def init():
	return redirect(url_for('index'))


if __name__ == '__main__':
	app.debug = True
	app.run(host='0.0.0.0')
